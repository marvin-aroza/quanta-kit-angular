name: Release Pipeline

on:
  push:
    branches: [monorepo-release]
  pull_request:
    branches: [monorepo-release]

permissions:
  contents: write
  issues: write
  pull-requests: write
  pages: write
  id-token: write

jobs:
  # Test and Build all packages
  test:
    name: Test and Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run check-types

      - name: Build packages
        run: npm run build

      - name: Build Storybooks
        run: npm run build-storybook

  # Release NPM packages using Changesets
  release:
    name: Release NPM Packages
    if: github.ref == 'refs/heads/monorepo-release'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Disable Husky for automated commits
        run: echo 'export HUSKY=0' >> $GITHUB_ENV

      - name: Create Release Pull Request or Publish to NPM
        id: changesets
        uses: changesets/action@v1
        with:
          publish: npm run release
          commit: "chore(release): publish packages [skip ci]"
          title: "chore(release): publish packages"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  # Deploy Storybooks to GitHub Pages
  deploy-storybooks:
    name: Deploy Storybooks
    if: github.ref == 'refs/heads/monorepo-release'
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build Storybooks
        run: npm run build-storybook

      - name: Create Storybook distribution
        run: |
          mkdir -p storybook-dist

      - name: Copy Storybook builds
        run: |
          cp -r packages/quanta-kit-react/storybook-static storybook-dist/react || echo "React Storybook not found"
          cp -r packages/quanta-kit-vue/storybook-static storybook-dist/vue || echo "Vue Storybook not found"
          cp -r packages/quanta-kit-angular/storybook-static storybook-dist/angular || echo "Angular Storybook not found"

      - name: Deploy Storybooks to GitHub Pages (subdirectory)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: storybook-dist
          destination_dir: storybook
          keep_files: true

  # Deploy Main Navigation (must be last to preserve index)
  deploy-main-nav:
    name: Deploy Main Navigation
    if: github.ref == 'refs/heads/monorepo-release'
    needs: [test, deploy-storybooks, deploy-docs]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create main navigation index
        run: |
          mkdir -p main-nav
          cat > main-nav/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="en">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Quanta Kit Design System</title>
            <style>
              body { 
                font-family: system-ui, -apple-system, sans-serif; 
                max-width: 1200px; 
                margin: 2rem auto; 
                padding: 2rem;
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                min-height: 100vh;
              }
              .header { text-align: center; margin-bottom: 3rem; }
              .header h1 { font-size: 3rem; margin-bottom: 0.5rem; }
              .header p { font-size: 1.2rem; opacity: 0.9; }
              .sections { display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 2rem; }
              .section { background: rgba(255,255,255,0.1); border-radius: 12px; padding: 2rem; backdrop-filter: blur(10px); }
              .section h2 { margin-top: 0; font-size: 1.5rem; }
              .link { 
                display: block; 
                padding: 1rem; 
                margin: 0.5rem 0; 
                background: rgba(255,255,255,0.1); 
                border-radius: 8px; 
                text-decoration: none; 
                color: white; 
                transition: all 0.3s;
              }
              .link:hover { background: rgba(255,255,255,0.2); transform: translateY(-2px); }
              .storybook-link { border-left: 4px solid #ff6b6b; }
              .docs-link { border-left: 4px solid #4ecdc4; }
            </style>
          </head>
          <body>
            <div class="header">
              <h1>🚀 Quanta Kit Design System</h1>
              <p>Interactive components and comprehensive documentation</p>
            </div>
            
            <div class="sections">
              <div class="section">
                <h2>📖 Storybook Components</h2>
                <p>Interactive component playground and documentation</p>
                <a href="./storybook/react/" class="link storybook-link">
                  <strong>React Storybook</strong><br>
                  Interactive React components
                </a>
                <a href="./storybook/vue/" class="link storybook-link">
                  <strong>Vue Storybook</strong><br>
                  Interactive Vue components
                </a>
                <a href="./storybook/angular/" class="link storybook-link">
                  <strong>Angular Storybook</strong><br>
                  Interactive Angular components
                </a>
              </div>
              
              <div class="section">
                <h2>📚 Documentation Sites</h2>
                <p>Framework-specific usage examples and guides</p>
                <a href="./docs/react/" class="link docs-link">
                  <strong>React Documentation</strong><br>
                  Examples and usage for React components
                </a>
                <a href="./docs/vue/" class="link docs-link">
                  <strong>Vue Documentation</strong><br>
                  Examples and usage for Vue components
                </a>
                <a href="./docs/angular/" class="link docs-link">
                  <strong>Angular Documentation</strong><br>
                  Examples and usage for Angular components
                </a>
              </div>
            </div>
          </body>
          </html>
          EOF

      - name: Deploy main navigation to GitHub Pages (root)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: main-nav
          keep_files: true

  # Deploy Documentation Sites
  deploy-docs:
    name: Deploy Documentation Sites
    if: github.ref == 'refs/heads/monorepo-release'
    needs: [test, deploy-storybooks]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages (needed for docs)
        run: npm run build

      - name: Build React docs
        run: |
          cd apps/quanta-kit-react-docs
          npm run build || echo "React docs build failed, creating placeholder"
          
      - name: Build Vue docs
        run: |
          cd apps/quanta-kit-vue-docs
          npm run build || echo "Vue docs build failed, creating placeholder"

      - name: Build Angular docs
        run: |
          cd apps/quanta-kit-angular-docs
          npm run build || echo "Angular docs build failed, creating placeholder"

      - name: Create docs index
        run: |
          mkdir -p docs-dist
          echo '<!DOCTYPE html>
          <html>
          <head>
            <title>Quanta Kit Design System - Documentation</title>
            <style>
              body { font-family: Arial, sans-serif; max-width: 800px; margin: 50px auto; padding: 20px; }
              .docs-link { display: block; padding: 20px; margin: 10px 0; background: #f0f8ff; text-decoration: none; color: #333; border-radius: 8px; border-left: 4px solid #0066cc; }
              .docs-link:hover { background: #e6f3ff; }
            </style>
          </head>
          <body>
            <h1>Quanta Kit Design System</h1>
            <h2>Documentation Sites</h2>
            <a href="./react/" class="docs-link">
              <strong>React Documentation</strong><br>
              Examples and usage for React components
            </a>
            <a href="./vue/" class="docs-link">
              <strong>Vue Documentation</strong><br>
              Examples and usage for Vue components
            </a>
            <a href="./angular/" class="docs-link">
              <strong>Angular Documentation</strong><br>
              Examples and usage for Angular components
            </a>
          </body>
          </html>' > docs-dist/index.html

      - name: Copy documentation builds
        run: |
          mkdir -p docs-dist/react docs-dist/vue docs-dist/angular
          
          # Copy React docs (Next.js exports to 'out' directory)
          if [ -d "apps/quanta-kit-react-docs/out" ]; then
            cp -r apps/quanta-kit-react-docs/out/* docs-dist/react/
            echo "✅ React docs copied successfully"
          else
            echo "❌ React docs not found, creating placeholder"
            echo '<h1>React Documentation</h1><p>Coming soon...</p>' > docs-dist/react/index.html
          fi
          
          # Copy Vue docs  
          if [ -d "apps/quanta-kit-vue-docs/dist" ]; then
            cp -r apps/quanta-kit-vue-docs/dist/* docs-dist/vue/
            echo "✅ Vue docs copied successfully"
          else
            echo "❌ Vue docs not found, creating placeholder"
            echo '<h1>Vue Documentation</h1><p>Coming soon...</p>' > docs-dist/vue/index.html
          fi
          
          # Copy Angular docs
          if [ -d "apps/quanta-kit-angular-docs/dist/quanta-kit-angular-docs" ]; then
            cp -r apps/quanta-kit-angular-docs/dist/quanta-kit-angular-docs/* docs-dist/angular/
            echo "✅ Angular docs copied successfully"
          else
            echo "❌ Angular docs not found, creating placeholder"
            echo '<h1>Angular Documentation</h1><p>Coming soon...</p>' > docs-dist/angular/index.html
          fi

      - name: Deploy docs to main GitHub Pages (subdirectory)
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs-dist
          destination_dir: docs
          keep_files: true
